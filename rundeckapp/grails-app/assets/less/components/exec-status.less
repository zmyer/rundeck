//execution status text
.exec-status {
  &.other,
  &[data-execstate=OTHER] {
    color: @brand-warning;

    &.icon {
      .glyphicon();
      .glyphicon-asterisk();
    }
  }

  &[data-execstate=OTHER][data-statusstring=incomplete] {
    color: orange;

    &.icon {
      .glyphicon();
      .glyphicon-exclamation-sign();
    }
  }

  &.fail,
  &[data-execstate=FAILED] {
    color: @brand-danger;

    &.icon {
      .glyphicon();
      .glyphicon-minus-sign();
    }
  }

  &.running,
  &[data-execstate=RUNNING] {
    color: @brand-info;

    &.icon {
      .glyphicon();
      .glyphicon-play-circle();
    }
  }

  &.succeed,
  &[data-execstate=SUCCEEDED] {
    color: @brand-success;

    &.icon {
      .glyphicon();
      .glyphicon-ok-circle();
    }
  }

  &.aborted,
  &[data-execstate=ABORTED] {
    color: @gray-light;

    &.icon {
      .glyphicon();
      .glyphicon-remove-circle();
    }
  }

  &.timedout,
  &[data-execstate=TIMEDOUT] {
    color: @brand-warning;

    &.icon {
      .glyphicon();
      .glyphicon-time();
    }
  }

  &.failedretry,
  &[data-execstate=FAILED-WITH-RETRY] {
    color: @brand-warning;

    &.icon {
      .glyphicon();
      .glyphicon-repeat();
    }
  }

  &.scheduled,
  &[data-execstate=SCHEDULED] {
    color: @brand-info;

    &.icon {
      .glyphicon();
      .glyphicon-time();
    }
  }
}

.exec-status-text.custom-status {
  font-style: italic;
}

.exec-status-text.custom-status:before {
  content: '“';
}

.exec-status-text.custom-status:after {
  content: '”';
}
